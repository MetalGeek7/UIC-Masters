package newEntities;

// Generated Oct 20, 2012 3:07:20 AM by Hibernate Tools 3.4.0.CR1

import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * SongData generated by hbm2java
 */
@Entity
@Table(name = "song_data", catalog = "songrecosystem")
public class SongData implements java.io.Serializable {

	private String songId;
	private SongArtists songArtists;
	private Genre genre;
	private SongAlbums songAlbums;
	private String songTitle;
	private String yearOfRelease;
	private BigDecimal songCost;
	private BigDecimal songDuration;
	private BigDecimal songHotness;
	private BigDecimal songDanceability;
	private BigDecimal songEnergy;
	private BigDecimal songTempo;
	private Set<SongsShared> songsShareds = new HashSet<SongsShared>(0);
	private Set<UserPlaycount> userPlaycounts = new HashSet<UserPlaycount>(0);
	private Set<SongsLiked> songsLikeds = new HashSet<SongsLiked>(0);
	private Set<SongsPurchased> songsPurchaseds = new HashSet<SongsPurchased>(0);
	private Set<SongRating> songRatings = new HashSet<SongRating>(0);

	public SongData() {
	}

	public SongData(String songId) {
		this.songId = songId;
	}

	public SongData(String songId, SongArtists songArtists, Genre genre,
			SongAlbums songAlbums, String songTitle, String yearOfRelease,
			BigDecimal songCost, BigDecimal songDuration,
			BigDecimal songHotness, BigDecimal songDanceability,
			BigDecimal songEnergy, BigDecimal songTempo,
			Set<SongsShared> songsShareds, Set<UserPlaycount> userPlaycounts,
			Set<SongsLiked> songsLikeds, Set<SongsPurchased> songsPurchaseds,
			Set<SongRating> songRatings) {
		this.songId = songId;
		this.songArtists = songArtists;
		this.genre = genre;
		this.songAlbums = songAlbums;
		this.songTitle = songTitle;
		this.yearOfRelease = yearOfRelease;
		this.songCost = songCost;
		this.songDuration = songDuration;
		this.songHotness = songHotness;
		this.songDanceability = songDanceability;
		this.songEnergy = songEnergy;
		this.songTempo = songTempo;
		this.songsShareds = songsShareds;
		this.userPlaycounts = userPlaycounts;
		this.songsLikeds = songsLikeds;
		this.songsPurchaseds = songsPurchaseds;
		this.songRatings = songRatings;
	}

	@Id
	@Column(name = "song_id", unique = true, nullable = false, length = 15)
	public String getSongId() {
		return this.songId;
	}

	public void setSongId(String songId) {
		this.songId = songId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "song_artist_id")
	public SongArtists getSongArtists() {
		return this.songArtists;
	}

	public void setSongArtists(SongArtists songArtists) {
		this.songArtists = songArtists;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "song_genre_id")
	public Genre getGenre() {
		return this.genre;
	}

	public void setGenre(Genre genre) {
		this.genre = genre;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "song_album_id")
	public SongAlbums getSongAlbums() {
		return this.songAlbums;
	}

	public void setSongAlbums(SongAlbums songAlbums) {
		this.songAlbums = songAlbums;
	}

	@Column(name = "song_title", length = 50)
	public String getSongTitle() {
		return this.songTitle;
	}

	public void setSongTitle(String songTitle) {
		this.songTitle = songTitle;
	}

	@Column(name = "year_of_release", length = 4)
	public String getYearOfRelease() {
		return this.yearOfRelease;
	}

	public void setYearOfRelease(String yearOfRelease) {
		this.yearOfRelease = yearOfRelease;
	}

	@Column(name = "song_cost", precision = 5)
	public BigDecimal getSongCost() {
		return this.songCost;
	}

	public void setSongCost(BigDecimal songCost) {
		this.songCost = songCost;
	}

	@Column(name = "song_duration", precision = 5)
	public BigDecimal getSongDuration() {
		return this.songDuration;
	}

	public void setSongDuration(BigDecimal songDuration) {
		this.songDuration = songDuration;
	}

	@Column(name = "song_hotness", precision = 5)
	public BigDecimal getSongHotness() {
		return this.songHotness;
	}

	public void setSongHotness(BigDecimal songHotness) {
		this.songHotness = songHotness;
	}

	@Column(name = "song_danceability", precision = 5)
	public BigDecimal getSongDanceability() {
		return this.songDanceability;
	}

	public void setSongDanceability(BigDecimal songDanceability) {
		this.songDanceability = songDanceability;
	}

	@Column(name = "song_energy", precision = 5)
	public BigDecimal getSongEnergy() {
		return this.songEnergy;
	}

	public void setSongEnergy(BigDecimal songEnergy) {
		this.songEnergy = songEnergy;
	}

	@Column(name = "song_tempo", precision = 5)
	public BigDecimal getSongTempo() {
		return this.songTempo;
	}

	public void setSongTempo(BigDecimal songTempo) {
		this.songTempo = songTempo;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "songData")
	public Set<SongsShared> getSongsShareds() {
		return this.songsShareds;
	}

	public void setSongsShareds(Set<SongsShared> songsShareds) {
		this.songsShareds = songsShareds;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "songData")
	public Set<UserPlaycount> getUserPlaycounts() {
		return this.userPlaycounts;
	}

	public void setUserPlaycounts(Set<UserPlaycount> userPlaycounts) {
		this.userPlaycounts = userPlaycounts;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "songData")
	public Set<SongsLiked> getSongsLikeds() {
		return this.songsLikeds;
	}

	public void setSongsLikeds(Set<SongsLiked> songsLikeds) {
		this.songsLikeds = songsLikeds;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "songData")
	public Set<SongsPurchased> getSongsPurchaseds() {
		return this.songsPurchaseds;
	}

	public void setSongsPurchaseds(Set<SongsPurchased> songsPurchaseds) {
		this.songsPurchaseds = songsPurchaseds;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "songData")
	public Set<SongRating> getSongRatings() {
		return this.songRatings;
	}

	public void setSongRatings(Set<SongRating> songRatings) {
		this.songRatings = songRatings;
	}

}
