package newEntities;

// Generated Oct 20, 2012 3:07:20 AM by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * SongArtists generated by hbm2java
 */
@Entity
@Table(name = "song_artists", catalog = "songrecosystem")
public class SongArtists implements java.io.Serializable {

	private String artistId;
	private Genre genre;
	private String artistName;
	private String artistDob;
	private String artistLocation;
	private Set<ArtistsLiked> artistsLikeds = new HashSet<ArtistsLiked>(0);
	private Set<SongData> songDatas = new HashSet<SongData>(0);
	private Set<ArtistRating> artistRatings = new HashSet<ArtistRating>(0);
	private Set<SongAlbums> songAlbumses = new HashSet<SongAlbums>(0);

	public SongArtists() {
	}

	public SongArtists(String artistId) {
		this.artistId = artistId;
	}

	public SongArtists(String artistId, Genre genre, String artistName,
			String artistDob, String artistLocation,
			Set<ArtistsLiked> artistsLikeds, Set<SongData> songDatas,
			Set<ArtistRating> artistRatings, Set<SongAlbums> songAlbumses) {
		this.artistId = artistId;
		this.genre = genre;
		this.artistName = artistName;
		this.artistDob = artistDob;
		this.artistLocation = artistLocation;
		this.artistsLikeds = artistsLikeds;
		this.songDatas = songDatas;
		this.artistRatings = artistRatings;
		this.songAlbumses = songAlbumses;
	}

	@Id
	@Column(name = "artist_id", unique = true, nullable = false, length = 15)
	public String getArtistId() {
		return this.artistId;
	}

	public void setArtistId(String artistId) {
		this.artistId = artistId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "artist_genre_id")
	public Genre getGenre() {
		return this.genre;
	}

	public void setGenre(Genre genre) {
		this.genre = genre;
	}

	@Column(name = "artist_name", length = 15)
	public String getArtistName() {
		return this.artistName;
	}

	public void setArtistName(String artistName) {
		this.artistName = artistName;
	}

	@Column(name = "artist_dob", length = 4)
	public String getArtistDob() {
		return this.artistDob;
	}

	public void setArtistDob(String artistDob) {
		this.artistDob = artistDob;
	}

	@Column(name = "artist_location", length = 30)
	public String getArtistLocation() {
		return this.artistLocation;
	}

	public void setArtistLocation(String artistLocation) {
		this.artistLocation = artistLocation;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "songArtists")
	public Set<ArtistsLiked> getArtistsLikeds() {
		return this.artistsLikeds;
	}

	public void setArtistsLikeds(Set<ArtistsLiked> artistsLikeds) {
		this.artistsLikeds = artistsLikeds;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "songArtists")
	public Set<SongData> getSongDatas() {
		return this.songDatas;
	}

	public void setSongDatas(Set<SongData> songDatas) {
		this.songDatas = songDatas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "songArtists")
	public Set<ArtistRating> getArtistRatings() {
		return this.artistRatings;
	}

	public void setArtistRatings(Set<ArtistRating> artistRatings) {
		this.artistRatings = artistRatings;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "songArtists")
	public Set<SongAlbums> getSongAlbumses() {
		return this.songAlbumses;
	}

	public void setSongAlbumses(Set<SongAlbums> songAlbumses) {
		this.songAlbumses = songAlbumses;
	}

}
